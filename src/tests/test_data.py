import unittest
import pandas as pd
from src.data.load_data import load_data

class TestDataLoading(unittest.TestCase):

    def setUp(self):
        self.file_path = '../data/raw/train.csv'
        self.dtypes = {
            'MachineIdentifier': 'category',
            'ProductName': 'category',
            'EngineVersion': 'category',
            # Add all other columns and their types as in your config.yaml
        }

    def test_load_data(self):
        df = load_data(self.file_path, self.dtypes, use_dask=False)
        self.assertIsInstance(df, pd.DataFrame, "Loaded data is not a DataFrame")

    def test_columns_exist(self):
        df = load_data(self.file_path, self.dtypes, use_dask=False)
        self.assertTrue(set(self.dtypes.keys()).issubset(df.columns), "Not all expected columns are present in the DataFrame")

    def test_data_types(self):
        df = load_data(self.file_path, self.dtypes, use_dask=False)
        for column, dtype in self.dtypes.items():
            self.assertEqual(df[column].dtype.name, dtype, f"Column {column} is not of type {dtype}")

if __name__ == '__main__':
    unittest.main()
