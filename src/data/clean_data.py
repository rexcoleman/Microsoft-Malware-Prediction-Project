import pandas as pd
import numpy as np

def handle_missing_values(df):
    """
    Handle missing values in the dataframe.

    Parameters:
    - df (DataFrame): input dataframe with potential missing values.

    Returns:
    - DataFrame: dataframe with missing values handled.
    """
    # Fill missing values with the mean for numeric columns
    for column in df.select_dtypes(include=[np.number]).columns:
        df[column].fillna(df[column].mean(), inplace=True)

    # Fill missing values with the mode for categorical columns
    for column in df.select_dtypes(include=['category']).columns:
        df[column].fillna(df[column].mode()[0], inplace=True)
    
    return df

def remove_duplicates(df, id_column):
    """
    Remove duplicate rows based on a specified column.
    
    Parameters:
    - df: DataFrame, input data.
    - id_column: str, column to check for duplicates.
    
    Returns:
    - DataFrame: data with duplicates removed.
    """
    df = df.drop_duplicates(subset=[id_column])
    return df

def check_no_missing_values(df):
    """
    Check if there are no missing values in the dataframe.

    Parameters:
    - df (DataFrame): input dataframe.

    Returns:
    - bool: True if no missing values, else False.
    """
    return not df.isnull().values.any()

def check_no_duplicates(df, id_column):
    """
    Check if there are no duplicate rows based on a specified column.

    Parameters:
    - df (DataFrame): input dataframe.
    - id_column (str): column to check for duplicates.

    Returns:
    - bool: True if no duplicates, else False.
    """
    return df.duplicated(subset=[id_column]).sum() == 0

def check_value_ranges(df, column_ranges):
    """
    Check if values in specified columns are within given ranges.

    Parameters:
    - df (DataFrame): input dataframe.
    - column_ranges (dict): dictionary where keys are column names and values are tuples (min, max).

    Returns:
    - bool: True if all values are within ranges, else False.
    """
    for column, (min_val, max_val) in column_ranges.items():
        if not df[column].between(min_val, max_val).all():
            return False
    return True
