import pandas as pd
from tqdm.notebook import tqdm
import logging
import os

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def read_csv_with_progress(file_path, chunk_size=100000, dtypes=None):
    """
    Read a CSV file with a progress bar and specified data types.
    
    Parameters:
    - file_path (str): Path to the CSV file.
    - chunk_size (int): Number of rows to read at a time.
    - dtypes (dict): Dictionary of column data types.
    
    Returns:
    - DataFrame: Loaded data.
    """
    try:
        total_rows = sum(1 for _ in open(file_path)) - 1  # Total number of rows minus the header
        num_chunks = total_rows // chunk_size + 1

        df = pd.DataFrame()
        with tqdm(total=num_chunks, desc="Loading CSV in chunks") as pbar:
            for chunk in pd.read_csv(file_path, chunksize=chunk_size, dtype=dtypes, low_memory=False):
                df = pd.concat([df, chunk], ignore_index=True)
                pbar.update(1)
        logging.info(f'Successfully loaded data from {file_path}')
        return df
    except FileNotFoundError:
        logging.error(f'File not found: {file_path}')
    except Exception as e:
        logging.error(f'Error loading data: {e}')

dtypes = {
    # The same dtype definitions as before
}
